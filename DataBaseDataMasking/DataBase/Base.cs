

// ------------------------------------------------------------------------------------------------
// This code was generated by EntityFramework Reverse POCO Generator (http://www.reversepoco.com/).
// Created by Simon Hughes (https://about.me/simon.hughes).
//
// Do not make changes directly to this file - edit the template instead.
//
// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace DataBaseDataMasking.DataBase.Base
{
    using Newtonsoft.Json;

    #region Unit of work

    public interface IDataMaskingContext : System.IDisposable
    {
        System.Data.Entity.DbSet<CommandSql> CommandSqls { get; set; } // CommandSql
        System.Data.Entity.DbSet<ConnectionString> ConnectionStrings { get; set; } // ConnectionString
        System.Data.Entity.DbSet<Departament> Departaments { get; set; } // Departament
        System.Data.Entity.DbSet<InfoColumn> InfoColumns { get; set; } // InfoColumn
        System.Data.Entity.DbSet<InfoConstraint> InfoConstraints { get; set; } // InfoConstraint
        System.Data.Entity.DbSet<InfoTable> InfoTables { get; set; } // InfoTable
        System.Data.Entity.DbSet<InfoTrigger> InfoTriggers { get; set; } // InfoTrigger
        System.Data.Entity.DbSet<ResourseRegularMasking> ResourseRegularMaskings { get; set; } // ResourseRegularMasking
        System.Data.Entity.DbSet<ResultCommand> ResultCommands { get; set; } // ResultCommand
        System.Data.Entity.DbSet<Rule> Rules { get; set; } // Rules
        System.Data.Entity.DbSet<RuleAndUser> RuleAndUsers { get; set; } // RuleAndUsers
        System.Data.Entity.DbSet<TupeDataBase> TupeDataBases { get; set; } // TupeDataBase
        System.Data.Entity.DbSet<TypeCommand> TypeCommands { get; set; } // TypeCommand
        System.Data.Entity.DbSet<User> Users { get; set; } // Users

        int SaveChanges();
        System.Threading.Tasks.Task<int> SaveChangesAsync();
        System.Threading.Tasks.Task<int> SaveChangesAsync(System.Threading.CancellationToken cancellationToken);
        System.Data.Entity.Infrastructure.DbChangeTracker ChangeTracker { get; }
        System.Data.Entity.Infrastructure.DbContextConfiguration Configuration { get; }
        System.Data.Entity.Database Database { get; }
        System.Data.Entity.Infrastructure.DbEntityEntry<TEntity> Entry<TEntity>(TEntity entity) where TEntity : class;
        System.Data.Entity.Infrastructure.DbEntityEntry Entry(object entity);
        System.Collections.Generic.IEnumerable<System.Data.Entity.Validation.DbEntityValidationResult> GetValidationErrors();
        System.Data.Entity.DbSet Set(System.Type entityType);
        System.Data.Entity.DbSet<TEntity> Set<TEntity>() where TEntity : class;
        string ToString();
    }

    #endregion

    #region Database context

    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class DataMaskingContext : System.Data.Entity.DbContext, IDataMaskingContext
    {
        public System.Data.Entity.DbSet<CommandSql> CommandSqls { get; set; } // CommandSql
        public System.Data.Entity.DbSet<ConnectionString> ConnectionStrings { get; set; } // ConnectionString
        public System.Data.Entity.DbSet<Departament> Departaments { get; set; } // Departament
        public System.Data.Entity.DbSet<InfoColumn> InfoColumns { get; set; } // InfoColumn
        public System.Data.Entity.DbSet<InfoConstraint> InfoConstraints { get; set; } // InfoConstraint
        public System.Data.Entity.DbSet<InfoTable> InfoTables { get; set; } // InfoTable
        public System.Data.Entity.DbSet<InfoTrigger> InfoTriggers { get; set; } // InfoTrigger
        public System.Data.Entity.DbSet<ResourseRegularMasking> ResourseRegularMaskings { get; set; } // ResourseRegularMasking
        public System.Data.Entity.DbSet<ResultCommand> ResultCommands { get; set; } // ResultCommand
        public System.Data.Entity.DbSet<Rule> Rules { get; set; } // Rules
        public System.Data.Entity.DbSet<RuleAndUser> RuleAndUsers { get; set; } // RuleAndUsers
        public System.Data.Entity.DbSet<TupeDataBase> TupeDataBases { get; set; } // TupeDataBase
        public System.Data.Entity.DbSet<TypeCommand> TypeCommands { get; set; } // TypeCommand
        public System.Data.Entity.DbSet<User> Users { get; set; } // Users

        static DataMaskingContext()
        {
            System.Data.Entity.Database.SetInitializer<DataMaskingContext>(null);
        }

        public DataMaskingContext()
            : base("Name=DataMasking")
        {
        }

        public DataMaskingContext(string connectionString)
            : base(connectionString)
        {
        }

        public DataMaskingContext(string connectionString, System.Data.Entity.Infrastructure.DbCompiledModel model)
            : base(connectionString, model)
        {
        }

        public DataMaskingContext(System.Data.Common.DbConnection existingConnection, bool contextOwnsConnection)
            : base(existingConnection, contextOwnsConnection)
        {
        }

        public DataMaskingContext(System.Data.Common.DbConnection existingConnection, System.Data.Entity.Infrastructure.DbCompiledModel model, bool contextOwnsConnection)
            : base(existingConnection, model, contextOwnsConnection)
        {
        }

        public DataMaskingContext(System.Data.Entity.Core.Objects.ObjectContext objectContext, bool dbContextOwnsObjectContext)
            : base(objectContext, dbContextOwnsObjectContext)
        {
        }

        protected override void Dispose(bool disposing)
        {
            base.Dispose(disposing);
        }

        public bool IsSqlParameterNull(System.Data.SqlClient.SqlParameter param)
        {
            var sqlValue = param.SqlValue;
            var nullableValue = sqlValue as System.Data.SqlTypes.INullable;
            if (nullableValue != null)
                return nullableValue.IsNull;
            return (sqlValue == null || sqlValue == System.DBNull.Value);
        }

        protected override void OnModelCreating(System.Data.Entity.DbModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Configurations.Add(new CommandSqlConfiguration());
            modelBuilder.Configurations.Add(new ConnectionStringConfiguration());
            modelBuilder.Configurations.Add(new DepartamentConfiguration());
            modelBuilder.Configurations.Add(new InfoColumnConfiguration());
            modelBuilder.Configurations.Add(new InfoConstraintConfiguration());
            modelBuilder.Configurations.Add(new InfoTableConfiguration());
            modelBuilder.Configurations.Add(new InfoTriggerConfiguration());
            modelBuilder.Configurations.Add(new ResourseRegularMaskingConfiguration());
            modelBuilder.Configurations.Add(new ResultCommandConfiguration());
            modelBuilder.Configurations.Add(new RuleConfiguration());
            modelBuilder.Configurations.Add(new RuleAndUserConfiguration());
            modelBuilder.Configurations.Add(new TupeDataBaseConfiguration());
            modelBuilder.Configurations.Add(new TypeCommandConfiguration());
            modelBuilder.Configurations.Add(new UserConfiguration());
        }

        public static System.Data.Entity.DbModelBuilder CreateModel(System.Data.Entity.DbModelBuilder modelBuilder, string schema)
        {
            modelBuilder.Configurations.Add(new CommandSqlConfiguration(schema));
            modelBuilder.Configurations.Add(new ConnectionStringConfiguration(schema));
            modelBuilder.Configurations.Add(new DepartamentConfiguration(schema));
            modelBuilder.Configurations.Add(new InfoColumnConfiguration(schema));
            modelBuilder.Configurations.Add(new InfoConstraintConfiguration(schema));
            modelBuilder.Configurations.Add(new InfoTableConfiguration(schema));
            modelBuilder.Configurations.Add(new InfoTriggerConfiguration(schema));
            modelBuilder.Configurations.Add(new ResourseRegularMaskingConfiguration(schema));
            modelBuilder.Configurations.Add(new ResultCommandConfiguration(schema));
            modelBuilder.Configurations.Add(new RuleConfiguration(schema));
            modelBuilder.Configurations.Add(new RuleAndUserConfiguration(schema));
            modelBuilder.Configurations.Add(new TupeDataBaseConfiguration(schema));
            modelBuilder.Configurations.Add(new TypeCommandConfiguration(schema));
            modelBuilder.Configurations.Add(new UserConfiguration(schema));
            return modelBuilder;
        }
    }
    #endregion

    #region Database context factory

    public class DataMaskingContextFactory : System.Data.Entity.Infrastructure.IDbContextFactory<DataMaskingContext>
    {
        public DataMaskingContext Create()
        {
            return new DataMaskingContext();
        }
    }

    #endregion

    #region POCO classes

    // CommandSql
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CommandSql
    {
        public int IdCommand { get; set; } // IdCommand (Primary key)
        public int? IdTupeDataBase { get; set; } // IdTupeDataBase
        public int? IdTupeCommand { get; set; } // IdTupeCommand
        public int? IdResultCommand { get; set; } // IdResultCommand
        public string CommandSql_ { get; set; } // CommandSql
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent ResultCommand pointed by [CommandSql].([IdResultCommand]) (FK_CommandSql_ResultCommand)
        /// </summary>
        public virtual ResultCommand ResultCommand { get; set; } // FK_CommandSql_ResultCommand

        /// <summary>
        /// Parent TupeDataBase pointed by [CommandSql].([IdTupeDataBase]) (FK_CommandSql_TupeDataBase)
        /// </summary>
        public virtual TupeDataBase TupeDataBase { get; set; } // FK_CommandSql_TupeDataBase

        /// <summary>
        /// Parent TypeCommand pointed by [CommandSql].([IdTupeCommand]) (FK_CommandSql_TypeCommand)
        /// </summary>
        public virtual TypeCommand TypeCommand { get; set; } // FK_CommandSql_TypeCommand

        public CommandSql()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // ConnectionString
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ConnectionString
    {
        public int IdConnectionString { get; set; } // IdConnectionString (Primary key)
        public int? IdUser { get; set; } // IdUser
        public int? IdTupeDataBase { get; set; } // IdTupeDataBase
        public string HostName { get; set; } // HostName (length: 128)
        public string UserName { get; set; } // UserName (length: 128)
        public string Password { get; set; } // Password (length: 128)
        public string NameDataBase { get; set; } // NameDataBase (length: 128)
        public int? Port { get; set; } // Port
        public string FullConnectionString { get; set; } // FullConnectionString (length: 1024)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child InfoTables where [InfoTable].[IdConnectionString] point to this entity (FK_InfoTable_ConnectionString)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<InfoTable> InfoTables { get; set; } // InfoTable.FK_InfoTable_ConnectionString

        // Foreign keys

        /// <summary>
        /// Parent TupeDataBase pointed by [ConnectionString].([IdTupeDataBase]) (FK_ConnectionString_TupeDataBase)
        /// </summary>
        public virtual TupeDataBase TupeDataBase { get; set; } // FK_ConnectionString_TupeDataBase

        /// <summary>
        /// Parent User pointed by [ConnectionString].([IdUser]) (FK_ConnectionString_Users)
        /// </summary>
        public virtual User User { get; set; } // FK_ConnectionString_Users

        public ConnectionString()
        {
            DataCreate = System.DateTime.Now;
            InfoTables = new System.Collections.Generic.List<InfoTable>();
        }
    }

    // Departament
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Departament
    {
        public int IdDepartament { get; set; } // IdDepartament (Primary key)
        public string NameDepartament { get; set; } // NameDepartament (length: 256)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child Users where [Users].[IdDepartament] point to this entity (FK_Users_Departament)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<User> Users { get; set; } // Users.FK_Users_Departament

        public Departament()
        {
            DataCreate = System.DateTime.Now;
            Users = new System.Collections.Generic.List<User>();
        }
    }

    // InfoColumn
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoColumn
    {
        public int IdInfoColumn { get; set; } // IdInfoColumn (Primary key)
        public int? IdInfoTable { get; set; } // IdInfoTable
        public int? IdRegularMasking { get; set; } // IdRegularMasking
        public string NameColumn { get; set; } // NameColumn (length: 128)
        public string TupeColumn { get; set; } // TupeColumn (length: 128)
        public string InfoColumn_ { get; set; } // InfoColumn (length: 1024)
        public bool? IsMasking { get; set; } // IsMasking
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent InfoTable pointed by [InfoColumn].([IdInfoTable]) (FK_InfoColumn_InfoTable)
        /// </summary>
        public virtual InfoTable InfoTable { get; set; } // FK_InfoColumn_InfoTable

        /// <summary>
        /// Parent ResourseRegularMasking pointed by [InfoColumn].([IdRegularMasking]) (FK_InfoColumn_ResourseRegularMasking)
        /// </summary>
        public virtual ResourseRegularMasking ResourseRegularMasking { get; set; } // FK_InfoColumn_ResourseRegularMasking

        public InfoColumn()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // InfoConstraint
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoConstraint
    {
        public int IdInfoConstraint { get; set; } // IdInfoConstraint (Primary key)
        public int? IdInfoTable { get; set; } // IdInfoTable
        public string NameConstraint { get; set; } // NameConstraint (length: 128)
        public string InfoConstraint_ { get; set; } // InfoConstraint (length: 1024)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent InfoTable pointed by [InfoConstraint].([IdInfoTable]) (FK_InfoConstraint_InfoTable)
        /// </summary>
        public virtual InfoTable InfoTable { get; set; } // FK_InfoConstraint_InfoTable

        public InfoConstraint()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // InfoTable
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoTable
    {
        public int IdInfoTable { get; set; } // IdInfoTable (Primary key)
        public int? IdConnectionString { get; set; } // IdConnectionString
        public string NameTable { get; set; } // NameTable (length: 128)
        public string InfoTable_ { get; set; } // InfoTable (length: 1024)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child InfoColumns where [InfoColumn].[IdInfoTable] point to this entity (FK_InfoColumn_InfoTable)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<InfoColumn> InfoColumns { get; set; } // InfoColumn.FK_InfoColumn_InfoTable
        /// <summary>
        /// Child InfoConstraints where [InfoConstraint].[IdInfoTable] point to this entity (FK_InfoConstraint_InfoTable)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<InfoConstraint> InfoConstraints { get; set; } // InfoConstraint.FK_InfoConstraint_InfoTable
        /// <summary>
        /// Child InfoTriggers where [InfoTrigger].[IdInfoTable] point to this entity (FK_InfoTrigger_InfoTable)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<InfoTrigger> InfoTriggers { get; set; } // InfoTrigger.FK_InfoTrigger_InfoTable

        // Foreign keys

        /// <summary>
        /// Parent ConnectionString pointed by [InfoTable].([IdConnectionString]) (FK_InfoTable_ConnectionString)
        /// </summary>
        public virtual ConnectionString ConnectionString { get; set; } // FK_InfoTable_ConnectionString

        public InfoTable()
        {
            DataCreate = System.DateTime.Now;
            InfoColumns = new System.Collections.Generic.List<InfoColumn>();
            InfoConstraints = new System.Collections.Generic.List<InfoConstraint>();
            InfoTriggers = new System.Collections.Generic.List<InfoTrigger>();
        }
    }

    // InfoTrigger
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoTrigger
    {
        public int IdInfoTrigger { get; set; } // IdInfoTrigger (Primary key)
        public int? IdInfoTable { get; set; } // IdInfoTable
        public string NameTrigger { get; set; } // NameTrigger (length: 128)
        public string InfoTrigger_ { get; set; } // InfoTrigger (length: 1024)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent InfoTable pointed by [InfoTrigger].([IdInfoTable]) (FK_InfoTrigger_InfoTable)
        /// </summary>
        public virtual InfoTable InfoTable { get; set; } // FK_InfoTrigger_InfoTable

        public InfoTrigger()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // ResourseRegularMasking
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ResourseRegularMasking
    {
        public int IdRegularMasking { get; set; } // IdRegularMasking (Primary key)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child InfoColumns where [InfoColumn].[IdRegularMasking] point to this entity (FK_InfoColumn_ResourseRegularMasking)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<InfoColumn> InfoColumns { get; set; } // InfoColumn.FK_InfoColumn_ResourseRegularMasking

        public ResourseRegularMasking()
        {
            DataCreate = System.DateTime.Now;
            InfoColumns = new System.Collections.Generic.List<InfoColumn>();
        }
    }

    // ResultCommand
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ResultCommand
    {
        public int IdResultCommand { get; set; } // IdResultCommand (Primary key)
        public string InfoResult { get; set; } // InfoResult (length: 512)
        public string Result { get; set; } // Result (length: 128)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child CommandSqls where [CommandSql].[IdResultCommand] point to this entity (FK_CommandSql_ResultCommand)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<CommandSql> CommandSqls { get; set; } // CommandSql.FK_CommandSql_ResultCommand

        public ResultCommand()
        {
            DataCreate = System.DateTime.Now;
            CommandSqls = new System.Collections.Generic.List<CommandSql>();
        }
    }

    // Rules
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class Rule
    {
        public int IdRule { get; set; } // IdRule (Primary key)
        public string InfoRule { get; set; } // InfoRule (length: 512)
        public string NameRules { get; set; } // NameRules (length: 128)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child RuleAndUsers where [RuleAndUsers].[IdRule] point to this entity (FK_RuleAndUsers_Rules)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<RuleAndUser> RuleAndUsers { get; set; } // RuleAndUsers.FK_RuleAndUsers_Rules

        public Rule()
        {
            DataCreate = System.DateTime.Now;
            RuleAndUsers = new System.Collections.Generic.List<RuleAndUser>();
        }
    }

    // RuleAndUsers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class RuleAndUser
    {
        public int IdRuleAndUsers { get; set; } // IdRuleAndUsers (Primary key)
        public int IdUser { get; set; } // IdUser
        public int IdRule { get; set; } // IdRule
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Foreign keys

        /// <summary>
        /// Parent Rule pointed by [RuleAndUsers].([IdRule]) (FK_RuleAndUsers_Rules)
        /// </summary>
        public virtual Rule Rule { get; set; } // FK_RuleAndUsers_Rules

        /// <summary>
        /// Parent User pointed by [RuleAndUsers].([IdUser]) (FK_RuleAndUsers_Users)
        /// </summary>
        public virtual User User { get; set; } // FK_RuleAndUsers_Users

        public RuleAndUser()
        {
            DataCreate = System.DateTime.Now;
        }
    }

    // TupeDataBase
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TupeDataBase
    {
        public int IdTupeDataBase { get; set; } // IdTupeDataBase (Primary key)
        public string NameTypeDataBase { get; set; } // NameTypeDataBase (length: 128)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child CommandSqls where [CommandSql].[IdTupeDataBase] point to this entity (FK_CommandSql_TupeDataBase)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<CommandSql> CommandSqls { get; set; } // CommandSql.FK_CommandSql_TupeDataBase
        /// <summary>
        /// Child ConnectionStrings where [ConnectionString].[IdTupeDataBase] point to this entity (FK_ConnectionString_TupeDataBase)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ConnectionString> ConnectionStrings { get; set; } // ConnectionString.FK_ConnectionString_TupeDataBase

        public TupeDataBase()
        {
            DataCreate = System.DateTime.Now;
            CommandSqls = new System.Collections.Generic.List<CommandSql>();
            ConnectionStrings = new System.Collections.Generic.List<ConnectionString>();
        }
    }

    // TypeCommand
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TypeCommand
    {
        public int IdTupeCommand { get; set; } // IdTupeCommand (Primary key)
        public string InfoType { get; set; } // InfoType (length: 512)
        public string NameTupeCommand { get; set; } // NameTupeCommand (length: 128)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child CommandSqls where [CommandSql].[IdTupeCommand] point to this entity (FK_CommandSql_TypeCommand)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<CommandSql> CommandSqls { get; set; } // CommandSql.FK_CommandSql_TypeCommand

        public TypeCommand()
        {
            DataCreate = System.DateTime.Now;
            CommandSqls = new System.Collections.Generic.List<CommandSql>();
        }
    }

    // Users
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class User
    {
        public int IdUser { get; set; } // IdUser (Primary key)
        public string NameUser { get; set; } // NameUser (length: 256)
        public int? IdDepartament { get; set; } // IdDepartament
        public int? IdPosition { get; set; } // IdPosition
        public string PersonnelNumber { get; set; } // PersonnelNumber (length: 32)
        public int? IdTelephon { get; set; } // IdTelephon
        public string LoginUser { get; set; } // LoginUser (length: 128)
        public string PasswordsUser { get; set; } // PasswordsUser (length: 128)
        public bool? StatusActual { get; set; } // StatusActual
        public string IdHistory { get; set; } // IdHistory (length: 64)
        public System.DateTime? DataCreate { get; set; } // DataCreate

        // Reverse navigation

        /// <summary>
        /// Child ConnectionStrings where [ConnectionString].[IdUser] point to this entity (FK_ConnectionString_Users)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<ConnectionString> ConnectionStrings { get; set; } // ConnectionString.FK_ConnectionString_Users
        /// <summary>
        /// Child RuleAndUsers where [RuleAndUsers].[IdUser] point to this entity (FK_RuleAndUsers_Users)
        /// </summary>
        [JsonIgnore]
        public virtual System.Collections.Generic.ICollection<RuleAndUser> RuleAndUsers { get; set; } // RuleAndUsers.FK_RuleAndUsers_Users

        // Foreign keys

        /// <summary>
        /// Parent Departament pointed by [Users].([IdDepartament]) (FK_Users_Departament)
        /// </summary>
        public virtual Departament Departament { get; set; } // FK_Users_Departament

        public User()
        {
            IdHistory = System.Guid.NewGuid().ToString();
            DataCreate = System.DateTime.Now;
            ConnectionStrings = new System.Collections.Generic.List<ConnectionString>();
            RuleAndUsers = new System.Collections.Generic.List<RuleAndUser>();
        }
    }

    #endregion

    #region POCO Configuration

    // CommandSql
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class CommandSqlConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<CommandSql>
    {
        public CommandSqlConfiguration()
            : this("dbo")
        {
        }

        public CommandSqlConfiguration(string schema)
        {
            ToTable("CommandSql", schema);
            HasKey(x => x.IdCommand);

            Property(x => x.IdCommand).HasColumnName(@"IdCommand").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdTupeDataBase).HasColumnName(@"IdTupeDataBase").HasColumnType("int").IsOptional();
            Property(x => x.IdTupeCommand).HasColumnName(@"IdTupeCommand").HasColumnType("int").IsOptional();
            Property(x => x.IdResultCommand).HasColumnName(@"IdResultCommand").HasColumnType("int").IsOptional();
            Property(x => x.CommandSql_).HasColumnName(@"CommandSql").HasColumnType("varchar(max)").IsOptional().IsUnicode(false);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.ResultCommand).WithMany(b => b.CommandSqls).HasForeignKey(c => c.IdResultCommand).WillCascadeOnDelete(false); // FK_CommandSql_ResultCommand
            HasOptional(a => a.TupeDataBase).WithMany(b => b.CommandSqls).HasForeignKey(c => c.IdTupeDataBase).WillCascadeOnDelete(false); // FK_CommandSql_TupeDataBase
            HasOptional(a => a.TypeCommand).WithMany(b => b.CommandSqls).HasForeignKey(c => c.IdTupeCommand).WillCascadeOnDelete(false); // FK_CommandSql_TypeCommand
        }
    }

    // ConnectionString
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ConnectionStringConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ConnectionString>
    {
        public ConnectionStringConfiguration()
            : this("dbo")
        {
        }

        public ConnectionStringConfiguration(string schema)
        {
            ToTable("ConnectionString", schema);
            HasKey(x => x.IdConnectionString);

            Property(x => x.IdConnectionString).HasColumnName(@"IdConnectionString").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsOptional();
            Property(x => x.IdTupeDataBase).HasColumnName(@"IdTupeDataBase").HasColumnType("int").IsOptional();
            Property(x => x.HostName).HasColumnName(@"HostName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.UserName).HasColumnName(@"UserName").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Password).HasColumnName(@"Password").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.NameDataBase).HasColumnName(@"NameDataBase").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.Port).HasColumnName(@"Port").HasColumnType("int").IsOptional();
            Property(x => x.FullConnectionString).HasColumnName(@"FullConnectionString").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.TupeDataBase).WithMany(b => b.ConnectionStrings).HasForeignKey(c => c.IdTupeDataBase).WillCascadeOnDelete(false); // FK_ConnectionString_TupeDataBase
            HasOptional(a => a.User).WithMany(b => b.ConnectionStrings).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_ConnectionString_Users
        }
    }

    // Departament
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class DepartamentConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Departament>
    {
        public DepartamentConfiguration()
            : this("dbo")
        {
        }

        public DepartamentConfiguration(string schema)
        {
            ToTable("Departament", schema);
            HasKey(x => x.IdDepartament);

            Property(x => x.IdDepartament).HasColumnName(@"IdDepartament").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameDepartament).HasColumnName(@"NameDepartament").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(256);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // InfoColumn
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoColumnConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoColumn>
    {
        public InfoColumnConfiguration()
            : this("dbo")
        {
        }

        public InfoColumnConfiguration(string schema)
        {
            ToTable("InfoColumn", schema);
            HasKey(x => x.IdInfoColumn);

            Property(x => x.IdInfoColumn).HasColumnName(@"IdInfoColumn").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdInfoTable).HasColumnName(@"IdInfoTable").HasColumnType("int").IsOptional();
            Property(x => x.IdRegularMasking).HasColumnName(@"IdRegularMasking").HasColumnType("int").IsOptional();
            Property(x => x.NameColumn).HasColumnName(@"NameColumn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.TupeColumn).HasColumnName(@"TupeColumn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InfoColumn_).HasColumnName(@"InfoColumn").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.IsMasking).HasColumnName(@"IsMasking").HasColumnType("bit").IsOptional();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.InfoTable).WithMany(b => b.InfoColumns).HasForeignKey(c => c.IdInfoTable).WillCascadeOnDelete(false); // FK_InfoColumn_InfoTable
            HasOptional(a => a.ResourseRegularMasking).WithMany(b => b.InfoColumns).HasForeignKey(c => c.IdRegularMasking).WillCascadeOnDelete(false); // FK_InfoColumn_ResourseRegularMasking
        }
    }

    // InfoConstraint
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoConstraintConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoConstraint>
    {
        public InfoConstraintConfiguration()
            : this("dbo")
        {
        }

        public InfoConstraintConfiguration(string schema)
        {
            ToTable("InfoConstraint", schema);
            HasKey(x => x.IdInfoConstraint);

            Property(x => x.IdInfoConstraint).HasColumnName(@"IdInfoConstraint").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdInfoTable).HasColumnName(@"IdInfoTable").HasColumnType("int").IsOptional();
            Property(x => x.NameConstraint).HasColumnName(@"NameConstraint").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InfoConstraint_).HasColumnName(@"InfoConstraint").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.InfoTable).WithMany(b => b.InfoConstraints).HasForeignKey(c => c.IdInfoTable).WillCascadeOnDelete(false); // FK_InfoConstraint_InfoTable
        }
    }

    // InfoTable
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoTableConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoTable>
    {
        public InfoTableConfiguration()
            : this("dbo")
        {
        }

        public InfoTableConfiguration(string schema)
        {
            ToTable("InfoTable", schema);
            HasKey(x => x.IdInfoTable);

            Property(x => x.IdInfoTable).HasColumnName(@"IdInfoTable").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdConnectionString).HasColumnName(@"IdConnectionString").HasColumnType("int").IsOptional();
            Property(x => x.NameTable).HasColumnName(@"NameTable").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InfoTable_).HasColumnName(@"InfoTable").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.ConnectionString).WithMany(b => b.InfoTables).HasForeignKey(c => c.IdConnectionString).WillCascadeOnDelete(false); // FK_InfoTable_ConnectionString
        }
    }

    // InfoTrigger
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class InfoTriggerConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<InfoTrigger>
    {
        public InfoTriggerConfiguration()
            : this("dbo")
        {
        }

        public InfoTriggerConfiguration(string schema)
        {
            ToTable("InfoTrigger", schema);
            HasKey(x => x.IdInfoTrigger);

            Property(x => x.IdInfoTrigger).HasColumnName(@"IdInfoTrigger").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdInfoTable).HasColumnName(@"IdInfoTable").HasColumnType("int").IsOptional();
            Property(x => x.NameTrigger).HasColumnName(@"NameTrigger").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.InfoTrigger_).HasColumnName(@"InfoTrigger").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(1024);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.InfoTable).WithMany(b => b.InfoTriggers).HasForeignKey(c => c.IdInfoTable).WillCascadeOnDelete(false); // FK_InfoTrigger_InfoTable
        }
    }

    // ResourseRegularMasking
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ResourseRegularMaskingConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ResourseRegularMasking>
    {
        public ResourseRegularMaskingConfiguration()
            : this("dbo")
        {
        }

        public ResourseRegularMaskingConfiguration(string schema)
        {
            ToTable("ResourseRegularMasking", schema);
            HasKey(x => x.IdRegularMasking);

            Property(x => x.IdRegularMasking).HasColumnName(@"IdRegularMasking").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // ResultCommand
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class ResultCommandConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ResultCommand>
    {
        public ResultCommandConfiguration()
            : this("dbo")
        {
        }

        public ResultCommandConfiguration(string schema)
        {
            ToTable("ResultCommand", schema);
            HasKey(x => x.IdResultCommand);

            Property(x => x.IdResultCommand).HasColumnName(@"IdResultCommand").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InfoResult).HasColumnName(@"InfoResult").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.Result).HasColumnName(@"Result").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Rules
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class RuleConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Rule>
    {
        public RuleConfiguration()
            : this("dbo")
        {
        }

        public RuleConfiguration(string schema)
        {
            ToTable("Rules", schema);
            HasKey(x => x.IdRule);

            Property(x => x.IdRule).HasColumnName(@"IdRule").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InfoRule).HasColumnName(@"InfoRule").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameRules).HasColumnName(@"NameRules").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // RuleAndUsers
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class RuleAndUserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<RuleAndUser>
    {
        public RuleAndUserConfiguration()
            : this("dbo")
        {
        }

        public RuleAndUserConfiguration(string schema)
        {
            ToTable("RuleAndUsers", schema);
            HasKey(x => x.IdRuleAndUsers);

            Property(x => x.IdRuleAndUsers).HasColumnName(@"IdRuleAndUsers").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsRequired();
            Property(x => x.IdRule).HasColumnName(@"IdRule").HasColumnType("int").IsRequired();
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasRequired(a => a.Rule).WithMany(b => b.RuleAndUsers).HasForeignKey(c => c.IdRule).WillCascadeOnDelete(false); // FK_RuleAndUsers_Rules
            HasRequired(a => a.User).WithMany(b => b.RuleAndUsers).HasForeignKey(c => c.IdUser).WillCascadeOnDelete(false); // FK_RuleAndUsers_Users
        }
    }

    // TupeDataBase
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TupeDataBaseConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TupeDataBase>
    {
        public TupeDataBaseConfiguration()
            : this("dbo")
        {
        }

        public TupeDataBaseConfiguration(string schema)
        {
            ToTable("TupeDataBase", schema);
            HasKey(x => x.IdTupeDataBase);

            Property(x => x.IdTupeDataBase).HasColumnName(@"IdTupeDataBase").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameTypeDataBase).HasColumnName(@"NameTypeDataBase").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // TypeCommand
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class TypeCommandConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<TypeCommand>
    {
        public TypeCommandConfiguration()
            : this("dbo")
        {
        }

        public TypeCommandConfiguration(string schema)
        {
            ToTable("TypeCommand", schema);
            HasKey(x => x.IdTupeCommand);

            Property(x => x.IdTupeCommand).HasColumnName(@"IdTupeCommand").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.InfoType).HasColumnName(@"InfoType").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(512);
            Property(x => x.NameTupeCommand).HasColumnName(@"NameTupeCommand").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(128);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();
        }
    }

    // Users
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.37.3.0")]
    public class UserConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<User>
    {
        public UserConfiguration()
            : this("dbo")
        {
        }

        public UserConfiguration(string schema)
        {
            ToTable("Users", schema);
            HasKey(x => x.IdUser);

            Property(x => x.IdUser).HasColumnName(@"IdUser").HasColumnType("int").IsRequired().HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.NameUser).HasColumnName(@"NameUser").HasColumnType("varchar").IsRequired().IsUnicode(false).HasMaxLength(256);
            Property(x => x.IdDepartament).HasColumnName(@"IdDepartament").HasColumnType("int").IsOptional();
            Property(x => x.IdPosition).HasColumnName(@"IdPosition").HasColumnType("int").IsOptional();
            Property(x => x.PersonnelNumber).HasColumnName(@"PersonnelNumber").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(32);
            Property(x => x.IdTelephon).HasColumnName(@"IdTelephon").HasColumnType("int").IsOptional();
            Property(x => x.LoginUser).HasColumnName(@"LoginUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.PasswordsUser).HasColumnName(@"PasswordsUser").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(128);
            Property(x => x.StatusActual).HasColumnName(@"StatusActual").HasColumnType("bit").IsOptional();
            Property(x => x.IdHistory).HasColumnName(@"IdHistory").HasColumnType("varchar").IsOptional().IsUnicode(false).HasMaxLength(64);
            Property(x => x.DataCreate).HasColumnName(@"DataCreate").HasColumnType("smalldatetime").IsOptional();

            // Foreign keys
            HasOptional(a => a.Departament).WithMany(b => b.Users).HasForeignKey(c => c.IdDepartament).WillCascadeOnDelete(false); // FK_Users_Departament
        }
    }

    #endregion

}
// </auto-generated>
